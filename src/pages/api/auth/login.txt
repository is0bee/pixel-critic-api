import { NextApiRequest, NextApiResponse } from 'next';
import { sql } from '@vercel/postgres';
import bcrypt from 'bcrypt';

const loginHandler = async (req: NextApiRequest, res: NextApiResponse) => {
  if (req.method === 'POST') {
    const { email, password } = req.body;

    try {
      const { rows } = await sql`SELECT * FROM Users WHERE email = ${email}`;

      if (rows.length === 0) {
        return res.status(404).json({ message: 'usuario nao encontrado' });
      }

      const user = rows[0];
      
      // Verifica se a senha é válida
      const isPasswordValid = await bcrypt.compare(password, user.password);
      if (!isPasswordValid) {
        return res.status(401).json({ message: 'senha incorreta' });
      }

      res.status(200).json({ message: 'login bem sucedido', user });
    } catch (error) {
      res.status(500).json({ message: 'erro ao tentar login', error });
    }
  } else {
    res.setHeader('Allow', ['POST']);
    res.status(405).end(`Method ${req.method} not allowed`);
  }
};

export default loginHandler;
