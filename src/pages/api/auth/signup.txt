// pages/api/auth/signup.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { sql } from '@vercel/postgres';
import bcrypt from 'bcrypt';

const signupHandler = async (req: NextApiRequest, res: NextApiResponse) => {
  if (req.method === 'POST') {
    const { username, email, password, bio, avatar } = req.body;

    try {
      const existingUser = await sql`SELECT * FROM Users WHERE email = ${email}`;
      if (existingUser.rows.length > 0) {
        return res.status(400).json({ message: 'Email já cadastrado' });
      }

      const hashedPassword = await bcrypt.hash(password, 10);

      const { rows } = await sql`
        INSERT INTO Users (username, email, password)
        VALUES (${username}, ${email}, ${hashedPassword})
        RETURNING *`;

      res.status(201).json({ message: 'usuário criado com sucesso', user: rows[0] });
    } catch (error) {
      res.status(500).json({ message: 'erro ao tentar criar o usuário', error });
    }
  } else {
    res.setHeader('Allow', ['POST']);
    res.status(405).end(`Method ${req.method} not allowed`);
  }
};

export default signupHandler;
